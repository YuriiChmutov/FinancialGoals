@page "/Accounts"
@using FinancialGoals.Client.Services.AccountService
@using System.Globalization

@inject IAccountService AccountService

@if (AccountService.Accounts != null)
{
    <div>
        <GridRow Justify="center" Align="middle">
            <GridCol>
                <DatePicker
                    Size="large"
                    Style="width: 300px; border-radius: 5px; border-color: gold; font-family: EightBitsFont;"
                    TValue="DateTime?"
                    @bind-Value="Date"
                    Picker="@DatePickerType.Month"/>
            </GridCol>
        </GridRow>
        <GridRow Style="font-family: EightBitsFont;" Justify="space-around" Align="middle">
            @foreach (var account in AccountService.Accounts)
            {
                <GridCol Class="gutter-row" Span="11" Style="height: 400px;">
                    <Divider>@account.Name</Divider>
                    <AccountPieChart Account="@account" Date="@Date" @key="@account.FinancialAccountId"/>
                </GridCol>
            }
            
            @foreach (var account in AccountService.Accounts)
            {
                <GridCol Class="gutter-row" Span="11" Style="height: 400px;">
                    <AccountBarChart Account="@account" Date="@Date" @key="@account.FinancialAccountId"/>
                </GridCol>
            }
        </GridRow>
    </div>
}

<style>
    .test-class {
        color: #0f5132;
    }
</style>

@code
{
    public DateTime? Date { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    
    protected override async Task OnInitializedAsync()
    {
        await AccountService.GetAccounts();
    }
}
