@page "/register"
@using FinancialGoals.Core.DTOs.User

@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

@* <h3>Register</h3> *@

<div class="container py-5 h-100">
    <EditForm Model="user" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator/>
        
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="form-outline">
                    <label for="firstName">First name</label>
                    <InputText type="text" id="firstName" @bind-Value="user.FirstName" class="form-control"/>
                    <ValidationMessage For="@(() => user.FirstName)"/>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="form-outline">
                    <label for="secondName">Last name</label>
                    <InputText id="secondName" @bind-Value="user.SecondName" class="form-control"/>
                    <ValidationMessage For="@(() => user.SecondName)"/>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-12 mb-4">
                <div class="form-outline">
                    <label for="email">Email</label>
                    <InputText id="email" @bind-Value="user.Email" class="form-control"/>
                    <ValidationMessage For="@(() => user.Email)"/>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="form-outline">
                    <label for="password">Password</label>
                    <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"/>
                    <ValidationMessage For="@(() => user.Password)"/>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="form-outline">
                    <label for="confirmPassword">Confirm Password</label>
                    <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"/>
                    <ValidationMessage For="@(() => user.ConfirmPassword)"/>
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
        <div class="text-danger">
            <span>@message</span>
        </div>
    </EditForm>
</div>


@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;
    
    
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    
    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        messageCssClass = result.Success ? "text-success" : "text-danger";
        // if (result.Success) await BlazoredModal.CloseAsync();
    }
}