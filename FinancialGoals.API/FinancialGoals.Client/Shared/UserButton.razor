@using FinancialGoals.Client.Pages
@using FinancialGoals.Client.Services.AccountService
@inject IModalService modal
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService
@inject IAccountService AccountService

<div class="dropdown" style="font-family: EightBitsFont">
    <button @onclick="ToggleUserMenu"
            @onfocusout="HideUserMenu"
            class="btn btn-secondary dropdown-toggle user-button"
            style="background-color: gold">
        <i class="oi oi-person" style="color: #1a1e21"></i>
    </button>
    <ul class="dropdown-menu dropdown-menu-sm-end @UserMenuCssClass">
        <AuthorizeView>
            <Authorized>
                <li><button class="dropdown-item" @onclick="Logout">Logout</button></li>
                <li><a href="profile" class="dropdown-item">Profile</a></li>
            </Authorized>
            <NotAuthorized>
                <li><button class="dropdown-item" @onclick="@(OpenRegisterForm)">Register</button></li>
                <li><button class="dropdown-item" @onclick="@(OpenLoginForm)">Login</button></li>
            </NotAuthorized>
        </AuthorizeView>

    </ul>
</div>

@code {
    private bool showUserMenu = false;

    private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
    }

    private async Task HideUserMenu()
    {
        await Task.Delay(200);
        showUserMenu = false;
    }
    
    private void OpenRegisterForm()
    {
        modal.Show<Register>("Register");
    }

    private void OpenLoginForm()
    {
        modal.Show<Login>("Login");
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        await CategoryService.Clean();
        await AccountService.Clean();
        NavigationManager.NavigateTo("");
    }
}